{
  "id": "2a1953eb-7b72-4e2d-8fbe-46646a405d4b",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.notes": {
      "name": "notes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "auth.user_id()"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'untitled note'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "shared": {
          "name": "shared",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        }
      },
      "indexes": {
        "owner_idx": {
          "name": "owner_idx",
          "columns": [
            {
              "expression": "owner_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "crud-authenticated-policy-select": {
          "name": "crud-authenticated-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(select auth.user_id() = \"notes\".\"owner_id\")"
        },
        "crud-authenticated-policy-insert": {
          "name": "crud-authenticated-policy-insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"],
          "withCheck": "(select auth.user_id() = \"notes\".\"owner_id\")"
        },
        "crud-authenticated-policy-update": {
          "name": "crud-authenticated-policy-update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"],
          "using": "(select auth.user_id() = \"notes\".\"owner_id\")",
          "withCheck": "(select auth.user_id() = \"notes\".\"owner_id\")"
        },
        "crud-authenticated-policy-delete": {
          "name": "crud-authenticated-policy-delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"],
          "using": "(select auth.user_id() = \"notes\".\"owner_id\")"
        },
        "shared_policy": {
          "name": "shared_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "\"notes\".\"shared\" = true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    },
    "public.paragraphs": {
      "name": "paragraphs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "note_id": {
          "name": "note_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "paragraphs_note_id_notes_id_fk": {
          "name": "paragraphs_note_id_notes_id_fk",
          "tableFrom": "paragraphs",
          "tableTo": "notes",
          "columnsFrom": ["note_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "crud-authenticated-policy-select": {
          "name": "crud-authenticated-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(select notes.owner_id = auth.user_id() from notes where notes.id = \"paragraphs\".\"note_id\")"
        },
        "crud-authenticated-policy-insert": {
          "name": "crud-authenticated-policy-insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"],
          "withCheck": "(select notes.owner_id = auth.user_id() from notes where notes.id = \"paragraphs\".\"note_id\")"
        },
        "crud-authenticated-policy-update": {
          "name": "crud-authenticated-policy-update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"],
          "using": "(select notes.owner_id = auth.user_id() from notes where notes.id = \"paragraphs\".\"note_id\")",
          "withCheck": "(select notes.owner_id = auth.user_id() from notes where notes.id = \"paragraphs\".\"note_id\")"
        },
        "crud-authenticated-policy-delete": {
          "name": "crud-authenticated-policy-delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"],
          "using": "(select notes.owner_id = auth.user_id() from notes where notes.id = \"paragraphs\".\"note_id\")"
        },
        "shared_policy": {
          "name": "shared_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(select notes.shared from notes where notes.id = \"paragraphs\".\"note_id\")"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}
